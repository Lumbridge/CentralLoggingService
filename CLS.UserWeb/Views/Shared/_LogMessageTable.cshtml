
@using System.Globalization
@model List<CLS.Core.Data.Log>

<div class="table-responsive">
    <table class="table table-sm table-bordered table-striped">
        <thead>
            <tr>
                <th>Publishing System</th>
                <th>Environment</th>
                <th>Timestamp</th>
                @if (ViewData["logLevel"] == null || ViewData["logLevel"]?.ToString() == "All")
                {
                    <th>Severity</th>
                }
                <th>Message</th>
                <th>Exception</th>
                <th>Stack Trace</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var truncLen = 40;
                var maxTooltipLength = 200;

                var messageLength = item.LogIndexMessage.Message?.Length;
                var exceptionLength = item.LogIndexException.Exception?.Length;
                var stackTraceLength = item.LogIndexStackTrace.StackTrace?.Length;

                var messageString = Html.Raw($"{item.LogIndexMessage.Message}");
                var exceptionString = Html.Raw($"{item.LogIndexException.Exception}");
                var stackTraceString = Html.Raw($"{item.LogIndexStackTrace.StackTrace}");

                if (messageLength > truncLen)
                {
                    messageString = Html.Raw(messageLength <= maxTooltipLength
                    ? $"{item.LogIndexMessage.Message.Substring(0, truncLen)} <span class='truncateTooltip' data-toggle='tooltip' title='{HttpUtility.HtmlEncode(item.LogIndexMessage.Message)}'>[...]</span>"
                    : $"<span class='modalLink' title='{HttpUtility.HtmlEncode(item.LogIndexMessage.Message)}'>{item.LogIndexMessage.Message.Substring(0, truncLen)}</span>");
                }

                if (exceptionLength > truncLen)
                {
                    exceptionString = Html.Raw(exceptionLength <= maxTooltipLength
                    ? $"{item.LogIndexException.Exception.Substring(0, truncLen)} <span class='truncateTooltip' data-toggle='tooltip' title='{HttpUtility.HtmlEncode(item.LogIndexException.Exception)}'>[...]</span>"
                    : $"<span class='modalLink' title='{HttpUtility.HtmlEncode(item.LogIndexException.Exception)}'>{item.LogIndexException.Exception.Substring(0, truncLen)}</span>");
                }

                if (stackTraceLength > truncLen)
                {
                    stackTraceString = Html.Raw(stackTraceLength <= maxTooltipLength
                    ? $"{item.LogIndexStackTrace.StackTrace.Substring(0, truncLen)} <span class='truncateTooltip' data-toggle='tooltip' title='{HttpUtility.HtmlEncode(item.LogIndexStackTrace.StackTrace)}'>[...]</span>"
                    : $"<span class='modalLink' title='{HttpUtility.HtmlEncode(item.LogIndexStackTrace.StackTrace)}'>{item.LogIndexStackTrace.StackTrace.Substring(0, truncLen)}</span>");
                }

                <tr data-id=@item.Id>
                    <td><a href="@Url.Action("Index", "Logs", new { publishingSystemId = item.PublishingSystemId })">@item.PublishingSystem.Name</a> </td>
                    <td>@item.PublishingSystem.EnvironmentType.Name</td>
                    <td>@item.Timestamp (<time class="timeago" datetime="@item.Timestamp.ToString(CultureInfo.InvariantCulture)">@item.Timestamp.ToString(CultureInfo.InvariantCulture)</time>)</td>
                    @if (ViewData["logLevel"] == null || ViewData["logLevel"]?.ToString() == "All")
                    {
                        <td>@item.Severity.Name</td>
                    }
                    <td>@messageString</td>
                    <td>@exceptionString</td>
                    <td>@stackTraceString</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
        $('table').on('draw.dt', function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
        $("table").DataTable();
    });
</script>